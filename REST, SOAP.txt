
 REST: Архитектурный подход
  - Архитектурный стиль;
  - Ориентирован на использование HTTP в качестве транспортного протокола.
  
  - Пример реализации: JSON через HTTP;

  - Специфика: это использование HTTP в качестве транспортного протокола, 
    он подразумевает наилучшее использование функций предостовляемых HTTP (Методы запросов, заголовки запросов, ответы, заголовки ответов и др.)



 SOAP: Формат протокола основаный на XML
  - Формат обмена сообщениями;
  - Ограничевает структуру сообщений на верхнем уровне.
  
  - Пример реализации: XML поверх SOAP через HTTP;
  
  - Специфика: Формат обмена данными - SOAP-XML с элементами: 
    - Еnvelope (Конверт, корневой элемент который определяет сообщения или пространство имён использованные в документе)
	- Header (Заголовок, который содержит атрибуты сообщения, например информацию о бесзопастности или о сетевой маршрутизации)
	- Body (Тело, содержит сообщения которым обмениваются приложения) 
	- Fault (Необзятельный элемент который предоставляет информацию об ошибках, которые произошли при обработке сообщений, и запрос и ответ должны соответствовать структуре SOAP)


 REST:                                                       SOAP: 
    - - - - - - - - - - Формат обмена сообщениями - - - - - - -   
	
 Нет фиксированного формата (JSON, | SOAP-XML
 XML, др.)                         |
 
    - - - - - - - - - - - - Определение услуг - - - - - - - - - 
	
 Не имеет стандартного языка       | WSDL (Web Service Description Language), 
 определения сервиса. Есть WADL,   | язык описания веб сервисов и доступа к ним основанный на XML
 но чаще используют Swagger или    |
 Open API                          |
 
   - - - - - - - - - - - - - - Транспорт - - - - - - - - - - - -
   
 REST подразумевает наилучшее      | SOAP не накладывает никаких ограничений,
 использование транспортного       | на тип транспортного протокола,  можно использовать HTTP или MQ
 протокола HTTP                    | 
  
   - - - - - - - - - - - - Простота реализации - - - - - - - - - - - -
   
 REST веб серсисы гараздо проще    | В случае с SOAP необходимо определить свой серсис с использованием 
 реализовать чем веб сервисы на    | WSDL, и при обработке и анализе сообщений SOAP-XML возникают большие
 основе SOAP. REST обычно          | накладные расходы
 использует JSON который легче     |
 анализировать и обрабатывать, и   |
 в дополнение к этому REST не      |
 требует наличия определения службы|
 для предостовления веб службы     |
 
 
 